#!/bin/bash

export http_hostname="your_http_hostname"
export external_port="your_external_port" 

# Function to execute an attack
run_attack() {
  local attack_name="$1"
  local curl_command="$2"
  
  echo "Running $attack_name attack on webserver"
  sleep 1
  
  # Execute the curl command and capture the response status
  response=$(eval "$curl_command" 2>&1)
  status=$(echo "$response" | grep -i "HTTP" | awk '{print $2}')
  
  # Check the response status and output the appropriate message with colors
  if [ "$status" == "200" ]; then
    echo -e "\e[1;31m==> $attack_name: Attack executed successfully!\e[0m"
  elif [ "$status" == "403" ]; then
    echo -e "\e[1;32m==> $attack_name: Attack has been successfully blocked by Prisma!\e[0m"
  fi
  
  echo "############################"
  sleep 3
}

# Attack functions
sql_injection() {
  local attack_name="SQL injection"
  local curl_command="curl -I \"http://$http_hostname:$external_port/\?id\=%27%20OR%20%271\""
  run_attack "$attack_name" "$curl_command"
}

xss() {
  local attack_name="Cross-site scripting"
  local curl_command="curl -I \"http://$http_hostname:$external_port/\?id\=\<script\>alert\(\1\)\</script\>\""
  run_attack "$attack_name" "$curl_command"
}

os_command_injection() {
  local attack_name="OS command injection"
  local curl_command="curl -I \"http://$http_hostname:$external_port/\?id\=%3B+%2Fsbin%2Fshutdown\""
  run_attack "$attack_name" "$curl_command"
}

local_file_inclusion() {
  local attack_name="Local file inclusion"
  local curl_command="curl -I \"http://$http_hostname:$external_port/\?id\=../etc/passwd\""
  run_attack "$attack_name" "$curl_command"
}

shellshock_attack() {
  local attack_name="Shellshock attack"
  local curl_command="curl -I -H \"User-Agent: () { :; }; /bin/eject\" \"http://$http_hostname:$external_port/\""
  run_attack "$attack_name" "$curl_command"
}

# Execute the attacks one by one
while true; do
  sql_injection
  xss
  os_command_injection
  local_file_inclusion
  shellshock_attack

  read -p "Do you want to run the attacks again? (y/n): " choice
  case "$choice" in
    [Yy]) ;;
    [Nn]) break ;;
    *) echo "Invalid choice. Please enter 'y' or 'n'." ;;
  esac
done
